syntax = "proto3";

package main;

option go_package = "prueba1/proto";

message GetTotalRequest {}

message GetTotalResponse {
    int32 total = 1;
}

service BankService {
    rpc GetTotal(GetTotalRequest) returns (GetTotalResponse);
}

// Mensaje para la solicitud de preparación del mercenario
message PreparacionRequest {
    string mercenario_id = 1;
    string nombre = 2;
}

// Mensaje para la respuesta de preparación del mercenario
message PreparacionResponse {
    string mensaje = 1;
}

// Mensaje para la solicitud de decisión del mercenario
message DecisionRequest {
    string mercenario_id = 1;
    string piso = 2;
}

// Mensaje para la respuesta de decisión del mercenario
message DecisionResponse {
    string mensaje = 1;
}

// Mensaje para la solicitud de monto acumulado en el Dosh Bank
message MontoRequest {
    string solicitud = 1;
}

// Mensaje para la respuesta de monto acumulado en el Dosh Bank
message MontoResponse {
    int32 total = 1;
}

// Definición del servicio del director
service DirectorService {
    rpc Preparacion(PreparacionRequest) returns (PreparacionResponse) {}
    rpc Decision(DecisionRequest) returns (DecisionResponse) {}
    rpc ObtenerMonto(MontoRequest) returns (MontoResponse) {}
}


// Para los pisos xd
message Piso1Request {
    repeated Mercenario mercenarios = 1;
}

message Piso2Request {
    repeated Decision decisiones = 1;
}

message Piso3Request {
    repeated int32 numeros = 1;
}

// Define responses for each floor
message Piso1Response {}
message Piso2Response {}
message Piso3Response {}

// Mercenario message
message Mercenario {
    string id = 1;
    string name = 2;
    // Add other fields as needed
}

// Decision message
message Decision {
    string id = 1;
    string decision = 2; // A o B
    // Add other fields as needed
}