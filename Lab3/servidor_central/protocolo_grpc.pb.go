// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: servidor_central/protocolo.proto

package servidor_central

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ServidorCentralClient is the client API for ServidorCentral service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ServidorCentralClient interface {
	SolicitudMunicion(ctx context.Context, in *PedirMunicion, opts ...grpc.CallOption) (*RespuestaMunicion, error)
}

type servidorCentralClient struct {
	cc grpc.ClientConnInterface
}

func NewServidorCentralClient(cc grpc.ClientConnInterface) ServidorCentralClient {
	return &servidorCentralClient{cc}
}

func (c *servidorCentralClient) SolicitudMunicion(ctx context.Context, in *PedirMunicion, opts ...grpc.CallOption) (*RespuestaMunicion, error) {
	out := new(RespuestaMunicion)
	err := c.cc.Invoke(ctx, "/servidor_central.ServidorCentral/SolicitudMunicion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServidorCentralServer is the server API for ServidorCentral service.
// All implementations must embed UnimplementedServidorCentralServer
// for forward compatibility
type ServidorCentralServer interface {
	SolicitudMunicion(context.Context, *PedirMunicion) (*RespuestaMunicion, error)
	mustEmbedUnimplementedServidorCentralServer()
}

// UnimplementedServidorCentralServer must be embedded to have forward compatible implementations.
type UnimplementedServidorCentralServer struct {
}

func (UnimplementedServidorCentralServer) SolicitudMunicion(context.Context, *PedirMunicion) (*RespuestaMunicion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SolicitudMunicion not implemented")
}
func (UnimplementedServidorCentralServer) mustEmbedUnimplementedServidorCentralServer() {}

// UnsafeServidorCentralServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ServidorCentralServer will
// result in compilation errors.
type UnsafeServidorCentralServer interface {
	mustEmbedUnimplementedServidorCentralServer()
}

func RegisterServidorCentralServer(s grpc.ServiceRegistrar, srv ServidorCentralServer) {
	s.RegisterService(&ServidorCentral_ServiceDesc, srv)
}

func _ServidorCentral_SolicitudMunicion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PedirMunicion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServidorCentralServer).SolicitudMunicion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/servidor_central.ServidorCentral/SolicitudMunicion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServidorCentralServer).SolicitudMunicion(ctx, req.(*PedirMunicion))
	}
	return interceptor(ctx, in, info, handler)
}

// ServidorCentral_ServiceDesc is the grpc.ServiceDesc for ServidorCentral service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ServidorCentral_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "servidor_central.ServidorCentral",
	HandlerType: (*ServidorCentralServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SolicitudMunicion",
			Handler:    _ServidorCentral_SolicitudMunicion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "servidor_central/protocolo.proto",
}
